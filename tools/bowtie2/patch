diff --git a/Makefile b/Makefile
index d56c077..2692b61 100644
--- a/Makefile
+++ b/Makefile
@@ -31,10 +31,10 @@ CC ?= $(GCC_PREFIX)/gcc$(GCC_SUFFIX)
 CPP ?= $(GCC_PREFIX)/g++$(GCC_SUFFIX)
 CXX ?= $(CPP)
 CXXFLAGS += -std=c++98
-ifeq (aarch64,$(shell uname -m))
+# ifeq (aarch64,$(shell uname -m))
 	CXXFLAGS += -fopenmp-simd
 	CPPFLAGS += -Ithird_party/simde
-endif
+# endif
 
 HEADERS := $(wildcard *.h)
 BOWTIE_MM := 1
@@ -46,13 +46,14 @@ VDB_VER ?= 2.9.2-1
 # Detect Cygwin or MinGW
 WINDOWS :=
 MINGW :=
-ifneq (,$(findstring MINGW,$(shell uname)))
+# TODO: how does memory-mapped files translate to the browser?
+# ifneq (,$(findstring MINGW,$(shell uname)))
 	WINDOWS := 1
 	MINGW := 1
 	# POSIX memory-mapped files not currently supported on Windows
 	BOWTIE_MM :=
 	BOWTIE_SHARED_MEM :=
-endif
+# endif
 
 MACOS :=
 ifneq (,$(findstring Darwin,$(shell uname)))
@@ -100,6 +101,9 @@ ifeq (1,$(MINGW))
 	PTHREAD_LIB :=
 else
 	PTHREAD_LIB := -lpthread
+	# TODO:
+	#   -s USE_PTHREADS=1
+	#   -s PROXY_TO_PTHREAD=1
 endif
 
 ifeq (1,$(NO_SPINLOCK))
@@ -204,9 +208,9 @@ endif
 ifeq (amd64,$(shell uname -m))
 	BITS := 64
 endif
-ifeq (aarch64,$(shell uname -m))
+# ifeq (aarch64,$(shell uname -m))
 	BITS := 64
-endif
+# endif
 # msys will always be 32 bit so look at the cpu arch instead.
 ifneq (,$(findstring AMD64,$(PROCESSOR_ARCHITEW6432)))
 	ifeq (1,$(MINGW))
@@ -219,15 +223,16 @@ endif
 
 SSE_FLAG := -msse2
 M64_FLAG := -m64
-ifeq (aarch64,$(shell uname -m))
+# ifeq (aarch64,$(shell uname -m))
 	SSE_FLAG =
 	M64_FLAG =
-endif
+# endif
 
 DEBUG_FLAGS    := -O0 -g3 $(M64_FLAG) $(SSE_FLAG)
 RELEASE_FLAGS  := -O3 $(M64_FLAG) $(SSE_FLAG) -funroll-loops -g3
 NOASSERT_FLAGS := -DNDEBUG
-FILE_FLAGS     := -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE
+FILE_FLAGS     := -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64 -D_GNU_SOURCE \
+	-D__aarch64__ -s TOTAL_MEMORY=100MB
 DEBUG_DEFS     = -DCOMPILER_OPTIONS="\"$(DEBUG_FLAGS) $(CXXFLAGS)\""
 RELEASE_DEFS   = -DCOMPILER_OPTIONS="\"$(RELEASE_FLAGS) $(CXXFLAGS)\""
 
@@ -381,9 +386,19 @@ bowtie2-align-s-sanitized bowtie2-align-s: bt2_search.cpp $(SEARCH_CPPS) $(SHARE
 	$(CXX) $(RELEASE_FLAGS) $(RELEASE_DEFS) $(CXXFLAGS) \
 		$(DEFS) -DBOWTIE2 $(NOASSERT_FLAGS) -Wall \
 		$(CPPFLAGS) \
-		-o $@ $< \
+		-o ../build/$@.html $< \
 		$(SHARED_CPPS) $(SEARCH_CPPS_MAIN) \
-		$(LDFLAGS) $(LDLIBS)
+		$(LDFLAGS) $(LDLIBS) \
+		-s EXTRA_EXPORTED_RUNTIME_METHODS="['callMain']" \
+		--preload-file example/@/example/ \
+		-s INVOKE_RUN=0 \
+		-s USE_ZLIB=1 \
+		-s ALLOW_MEMORY_GROWTH=1 \
+		-s FORCE_FILESYSTEM=1 \
+		-lworkerfs.js \
+		-s ASSERTIONS=1 \
+		-s DISABLE_EXCEPTION_CATCHING=0
+
 
 bowtie2-align-l-sanitized bowtie2-align-l: bt2_search.cpp $(SEARCH_CPPS) $(SHARED_CPPS) $(HEADERS) $(SEARCH_FRAGMENTS)
 	$(CXX) $(RELEASE_FLAGS) $(RELEASE_DEFS) $(CXXFLAGS) \
diff --git a/bt2_search.cpp b/bt2_search.cpp
index bae258c..67566b6 100644
--- a/bt2_search.cpp
+++ b/bt2_search.cpp
@@ -3012,7 +3012,6 @@ static void multiseedSearchWorker(void *vp) {
 		msg = ss.str();
 		Timer timer(std::cout, msg.c_str());
 #endif
-
 		// Sinks: these are so that we can print tables encoding counts for
 		// events of interest on a per-read, per-seed, per-join, or per-SW
 		// level.  These in turn can be used to diagnose performance
@@ -4761,10 +4760,12 @@ static void multiseedSearch(
 			SLEEP(10);
 #else
 			// Thread IDs start at 1
+			// TODO: threads
 			if(bowtie2p5) {
 				threads.push_back(new tthread::thread(multiseedSearchWorker_2p5, (void*)&tids.back()));
 			} else {
 				threads.push_back(new tthread::thread(multiseedSearchWorker, (void*)&tids.back()));
+				multiseedSearchWorker( (void*)&tids.back() );
 			}
 #endif
 		}
