name: Deploy biowasm v3

env:
  EM_VERSION: 2.0.25
  EM_CACHE_FOLDER: "emsdk-cache"

on:
  push:
    branches:
      - v3
  # workflow_dispatch:
  #   inputs:
  #     env:
  #       description: "Environment"
  #       required: true
  #       default: "stg"
  #     tools_to_compile:
  #       description: "Tools to compile to WebAssembly (comma-separated; 'all'; 'none')"
  #       required: false
  #       default: "all"

jobs:
  deploy:
    runs-on: ubuntu-latest
    name: Deploy biowasm v3 (${{ github.event.inputs.env }})
    steps:
      # ------------------------------------------------------------------------
      # Setup
      # ------------------------------------------------------------------------
      - name: Checkout biowasm repo
        uses: actions/checkout@v3
        with:
          ref: ${{ github.ref }}

      - name: Setup cache
        id: cache-system-libraries
        uses: actions/cache@v3
        with:
          path: ${{env.EM_CACHE_FOLDER}}
          key: ${{env.EM_VERSION}}-${{ runner.os }}

      - name: Download Emscripten
        if: ${{ github.event.inputs.tools_to_compile != 'none' }}
        uses: mymindstorm/setup-emsdk@v11
        with:
          version: ${{env.EM_VERSION}}
          actions-cache-folder: ${{env.EM_CACHE_FOLDER}}

      - name: Test Emscripten
        if: ${{ github.event.inputs.tools_to_compile != 'none' }}
        run: emcc -v

      # ------------------------------------------------------------------------
      # Compile
      # ------------------------------------------------------------------------
      - name: Compile to WebAssembly
        if: ${{ github.event.inputs.tools_to_compile != 'none' }}
        run: bin/compile.py --tools ${{ github.event.inputs.tools_to_compile }}

      # ------------------------------------------------------------------------
      # Deploy to Cloudflare Workers
      # ------------------------------------------------------------------------
      - name: Deploy biowasm.com/v3/ (${{ github.event.inputs.env }})
        if: ${{ !env.ACT }}
        uses: cloudflare/wrangler-action@2.0.0
        env:
          USER: root
          CF_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          CF_ZONE_ID: ${{ secrets.CF_ZONE_ID }}
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          environment: ${{ github.event.inputs.env }}
          preCommands: |
            npx wrangler kv:bulk put --binding=CDN build/cf_kv_upload.json
            cd web/
